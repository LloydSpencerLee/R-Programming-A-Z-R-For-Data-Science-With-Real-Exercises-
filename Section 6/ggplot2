
#--------------- S6_62: What is a Factor?
getwd()

movies <- read.csv("Movie Ratings.csv")
head(movies)

colnames(movies) <- c("Film", "Genre","CriticRating", "AudienceRating", "BudgetMillions", "Year")
head(movies)
tail(movies)
str(movies)
summary(movies)

#Change Year to a factor
movies$Year <- factor(movies$Year)

#---------------- S6_63: Aesthetics
library(ggplot2)

ggplot(data=movies, aes(x=CriticRating, y=AudienceRating))

#add geometry
ggplot(data=movies, aes(x=CriticRating, y=AudienceRating)) + 
  geom_point()

#add colour
ggplot(data=movies, aes(x=CriticRating, y=AudienceRating, 
                        colour=Genre)) + 
  geom_point()

#add size
ggplot(data=movies, aes(x=CriticRating, y=AudienceRating, 
                        colour=Genre, size=BudgetMillions)) + 
  geom_point()

#>>> This is #1 (we will improve it)

#---------------------- S6_64: Plotting With Layers

#creates object

p <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating, 
                             colour=Genre, size=BudgetMillions))

#point
p + geom_point()

#lines
p + geom_line()

#multiple layers

p + geom_point() + geom_line()
p + geom_line() + geom_point()

#---------------------- S6_65: Overriding Aesthestics

q <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating,
                             colour=Genre, size=BudgetMillions))

#add geom layer
q + geom_point()

#overriding aes ex1
q + geom_point(aes(size=CriticRating))

#overriding aes ex2
q + geom_point(aes(colour=BudgetMillions))

#q remains the same
q + geom_point()

#overriding aes ex3 - doesn't overwrite the x axis name. Need to use xlab
q + geom_point(aes(x=BudgetMillions)) +
  xlab("Budget Millions $$$")

#overriding aes ex4 - didn't use aes() because one is mapping the one below is setting
q + geom_line(size=1) + geom_point()


#---------------------- S6_66: Mapping vs Setting

r <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating))
r + geom_point()

#Add colour
#1. Mapping (what we've done so far): 
# Use aes() for mapping
r + geom_point(aes(colour=Genre))

#2. Setting:
r + geom_point(colour="DarkGreen")

#3. ERROR:
#r + geom_point(aes(colour="DarkGreen"))


#1. Mapping - use aes()
r + geom_point(aes(size=BudgetMillions))

#2. Setting
r + geom_point(size=10)

#3. ERROR
#r + geom_point(aes(size=10))

#---------------------- S6_67: Histograms and Density Charts
s <- ggplot(data=movies, aes(x=BudgetMillions))

s + geom_histogram(binwidth=10)

#add colour - mapping
s + geom_histogram(binwidth=10, aes(fill=Genre))

#add a border
s + geom_histogram(binwidth=10, aes(fill=Genre), colour="Black")

#>>> 3 (we will improve it)

#sometimes you may need density charts:
s + geom_density(aes(fill=Genre))

s + geom_density(aes(fill=Genre), position="stack")

#---------------------- S6_68: Starting Layer Tips

#aes() is in the base layer
t <- ggplot(data=movies, aes(x=AudienceRating))

t + geom_histogram(binwidth = 10,
                   fill="White", colour="Blue")

#another way where we don't set aes at the base layer
t <- ggplot(data=movies)

t + geom_histogram(binwidth = 10, 
                   aes(x=AudienceRating),
                   fill="White", colour="Blue")

#>>> 4

t + geom_histogram(binwidth = 10, 
                   aes(x=CriticRating),
                   fill="White", colour="Blue")

#>>> 5

t <- ggplot()


#---------------------- S6_69: Statistical Transformations

?geom_smooth
head(movies)
u <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating,
                             colour=Genre))

u + geom_point() + geom_smooth(fill=NA)

#boxplots
u <- ggplot(data=movies, aes(x=Genre, y=AudienceRating,
                             colour=Genre))
u + geom_boxplot()
u + geom_boxplot(size=1.2) + geom_point()

#tip:
u + geom_boxplot(size=1.2) + geom_jitter()

#anotherway:

u + geom_jitter() + geom_boxplot(size=1.2, alpha=0.5) 
#>>> 6

#
critic <- ggplot(data=movies, aes(x=Genre, y=CriticRating,
                                  colour=Genre))
critic + geom_jitter() + geom_boxplot(size=1.2, alpha=0.5) 

#---------------------- S6_70: Using Facets

v <- ggplot(data=movies, aes(x=BudgetMillions))
v + geom_histogram(binwidth=10, aes(fill=Genre), 
                   colour="Black")

#facets
v + geom_histogram(binwidth=10, aes(fill=Genre), 
                   colour="Black") +
  facet_grid(Genre~., scales="free")

#scatterplots:
w <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating,
                             colour=Genre))

w + geom_point(size=3)

#facets
w + geom_point(size=3)+
  facet_grid(Genre~.)

w + geom_point(size=3)+
  facet_grid(.~Year)

w + geom_point(size=3)+
  facet_grid(Genre~Year)


w + geom_point(size=3)+ 
  geom_smooth() +
  facet_grid(Genre~Year)

w + geom_point(aes(size=BudgetMillions)) + 
  geom_smooth() +
  facet_grid(Genre~Year)

#>>> 1 (but still will improve)

#---------------------- S6_71: Coordinates

#Today:
#limits
#zoom


m <- ggplot(data=movies, aes(x=CriticRating, y=AudienceRating,
                             size=BudgetMillions,
                             colour=Genre))

m + geom_point()

m + geom_point() + 
  xlim(50,100) +
  ylim(50,100)

#won't work well always

n <- ggplot(data=movies, aes(x=BudgetMillions))

n + geom_histogram(binwidth=10, aes(fill=Genre), colour="Black")

n + geom_histogram(binwidth=10, aes(fill=Genre), colour="Black") +
  ylim(0,50)

#instead - zoom:
n + geom_histogram(binwidth=10, aes(fill=Genre), colour="Black") +
  coord_cartesian(ylim=c(0,50))


#improve #1:

w + geom_point(aes(size=BudgetMillions)) + 
  geom_smooth() +
  facet_grid(Genre~Year) +
  coord_cartesian(ylim=c(0,100))

#---------------------- S6_72: Perfecting By Adding Themes

o <- ggplot(data=movies, aes(x=BudgetMillions))
h <- o + geom_histogram(binwidth=10, aes(fill=Genre), colour="Black")

h

#axes labels
h + 
  xlab("Money Axis") +
  ylab("Number of Movies")


#label formatting

h + 
  xlab("Money Axis") +
  ylab("Number of Movies") +
  theme(axis.title.x=element_text(colour="DarkGreen", size=30),
        axis.title.y=element_text(colour="Red", size=30))

#tick mark formatting
h + 
  xlab("Money Axis") +
  ylab("Number of Movies") +
  theme(axis.title.x=element_text(colour="DarkGreen", size=30),
        axis.title.y=element_text(colour="Red", size=30),
        axis.text.x=element_text(size=20),
        axis.text.y=element_text(size=20))

?theme

#legend formatting
h + 
  xlab("Money Axis") +
  ylab("Number of Movies") +
  theme(axis.title.x=element_text(colour="DarkGreen", size=30),
        axis.title.y=element_text(colour="Red", size=30),
        axis.text.x=element_text(size=20),
        axis.text.y=element_text(size=20),
        
        legend.title=element_text(size=30),
        legend.text=element_text(size=20),
        legend.position=c(1,1),
        legend.justification=c(1,1))

#title formatting
h + 
  xlab("Money Axis") +
  ylab("Number of Movies") +
  ggtitle("Movie Budget Distribution") +
  theme(axis.title.x=element_text(colour="DarkGreen", size=30),
        axis.title.y=element_text(colour="Red", size=30),
        axis.text.x=element_text(size=20),
        axis.text.y=element_text(size=20),
        
        legend.title=element_text(size=30),
        legend.text=element_text(size=20),
        legend.position=c(1,1),
        legend.justification=c(1,1),
        
        plot.title=element_text(colour="DarkBlue",
                                size=40,
                                family="Courier"))
